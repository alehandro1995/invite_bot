const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const input = require("input");
const cron = require("node-cron");

const apiId = 28303926;
const apiHash = "7883d5805795b785fdde6f6f29546809";
const stringSession = new StringSession(""); // –≤—Å—Ç–∞–≤—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å–µ—Å—Å–∏—é

// –°–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
const MESSAGE_TEXT = `
üì£ *–ü–û–î–†–ê–ë–û–¢–ö–ê –î–õ–Ø –í–°–ï–•*

üíµ –°–∫–∏–Ω—É –Ω–∞ –∫–∞—Ä—Ç—É *5000 —Ä—É–±–ª–µ–π*
‚úÖ –ó–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
üïë 10 –º–∏–Ω—É—Ç –∏ –¥–µ–Ω—å–≥–∏ —É —Ç–µ–±—è –≤ –∫–∞—Ä–º–∞–Ω–µ
üëâ –ó–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ [–ø–∏—à–∏ –≤ –ª—Å](https://t.me/+kheEgbgt_kgzMjA5)`;

let client = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async function sendBroadcast() {
    if (!client) {
        console.log("‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        return;
    }

    console.log("\n‚è∞ –ó–∞–ø—É—Å–∫ –µ–∂–µ—á–∞—Å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...");
    console.log("‚è∞ –í—Ä–µ–º—è:", new Date().toLocaleString());

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if (!client.connected) {
            console.log("üîÅ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è...");
            await client.connect();
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤
        const dialogs = await client.getDialogs({});
        console.log(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∏–∞–ª–æ–≥–æ–≤: ${dialogs.length}`);

        let sentCount = 0;
        let errorCount = 0;
        let skippedCount = 0;

        for (const dialog of dialogs) {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø—ã –∏ –∫–∞–Ω–∞–ª—ã
            if (dialog.isGroup) {
                try {
                    console.log(`\nüì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤: ${dialog.name} (ID: ${dialog.id})`);
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
                    await client.sendMessage(dialog.entity, {
                        message: MESSAGE_TEXT,
                        parseMode: "markdown",
												linkPreview: false
                    });
                    
                    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤: ${dialog.name}`);
                    sentCount++;
                } catch (error) {
                    if (error.message.includes('FLOOD')) {
                        console.log(`‚è∏Ô∏è –õ–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É...`);
                        await new Promise(resolve => setTimeout(resolve, 10000));
                        continue;
                    }
                    console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ ${dialog.name}:`, error.message);
                    errorCount++;
                }

								// –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏–º–∏—Ç–æ–≤
                await new Promise(resolve => setTimeout(resolve, 10000));
            } else {
                skippedCount++;
            }
        }

        console.log(`\nüìä –ò—Ç–æ–≥ —Ä–∞—Å—Å—ã–ª–∫–∏:`);
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${sentCount}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (–Ω–µ –≥—Ä—É–ø–ø—ã): ${skippedCount}`);
        console.log(`‚è∞ –°–ª–µ–¥—É—é—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤: ${new Date(Date.now() + 3600000).toLocaleTimeString()}`);

    } catch (error) {
        console.log("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ:", error.message);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function initializeClient() {
    console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Telegram...");
    
    client = new TelegramClient(stringSession, apiId, apiHash, {
        connectionRetries: 5,
    });

    try {
        await client.start({
            phoneNumber: async () => "+905483121192",
            password: async () => "nintendo27",
            phoneCode: async () =>
                await input.text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥: "),
            onError: (err) => console.log("–û—à–∏–±–∫–∞:", err),
        });

        console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Telegram");

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
        console.log("üîë –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å–µ—Å—Å–∏—é –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:");
        console.log(client.session.save());

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Å—Ä–∞–∑—É
        console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...");
        await sendBroadcast();

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –Ω–∞ –µ–∂–µ—á–∞—Å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É
        cron.schedule('0 * * * *', async () => {
            await sendBroadcast();
        });

        console.log("‚è∞ Cron –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –µ–∂–µ—á–∞—Å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É (–≤ 0 –º–∏–Ω—É—Ç –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞)");

    } catch (error) {
        console.log("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", error);
        process.exit(1);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
process.on('SIGINT', async () => {
    console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã...");
    if (client) {
        await client.disconnect();
        console.log("üîå –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç Telegram");
    }
    process.exit(0);
});

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
console.log("ü§ñ –ë–æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∑–∞–ø—É—â–µ–Ω");
console.log("üìÖ –†–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å");
initializeClient();